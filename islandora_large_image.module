<?php

/**
 * @file
 *
 * Hooks and callbacks for this module.
 */

/**
 * Implements hook_menu().
 */
function islandora_large_image_menu() {
  $items = array();
  $items['admin/islandora/large_image'] = array(  // @TODO: solution pack admin pages one nested deeper?
    'title' => 'Large Image Collection', // @TODO: should this just be named 'Large image'? are configuring the collection or the solution pack?
    'description' => 'Configure the Large Image solution pack.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_large_image_admin'),
    'file' => 'admin/islandora_large_image.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 *
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called (the pids
 * colon should be replaced with a dash)
 *
 * @return array
 */
function islandora_large_image_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_large_image' => array(
      'template' => 'theme/islandora-large-image',
      /**
       * We can add pids to the end of this pattern in our preprocess function and templates
       * will be able to have have a pid appended to the template name to overide a template on a per object basis
       * an example template would be named islandora-basic-image--islandora-27.tpl.phps
       */
      'pattern' => 'islandora_large_image__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 *
 * @return type
 */
function islandora_large_image_islandora_required_objects() {
  $module_path = drupal_get_path('module', 'islandora_large_image');
  return array(
    'islandora_large_image' => array(
      'title' => 'Islandora large image',
      'objects' => array(
        array(
          'pid' => 'islandora:sp_large_image_cmodel',
          'label' => 'Islandora large image content model',
          'cmodel' => 'fedora-system:ContentModel-3.0',
          'datastreams' => array(
            array(
              'dsid' => 'ISLANDORACM',
              'label' => 'Islandora content model',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_sp_large_image_cmodel.xml",
            ),
            array(
              'dsid' => 'DS-COMPOSITE-MODEL',
              'label' => 'DS-COMPOSITE-MODEL',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_large_image_ds_composite_model.xml",
            ),
          ),
        ),
        array(
          'pid' => 'islandora:sp_large_image_collection',
          'label' => 'Large image collection',
          'cmodel' => 'islandora:collectionCModel',
          'parent' => 'islandora:root',
          'datastreams' => array(
            array(
              'dsid' => 'TN',
              'label' => 'Thumbnail',
              'mimetype' => 'image/png',
              'control_group' => 'M',
              'datastream_file' => "$module_path/images/folder.png",
            ),
            array(
              'dsid' => 'COLLECTION_POLICY',
              'label' => 'Collection policy',
              'mimetype' => 'text/xml',
              'control_group' => 'X',
              'datastream_file' => "$module_path/xml/islandora_large_image_collection_policy.xml",
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_large_image_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_large_image');
  return array(
    'Large image MODS form' => array(
      'form_file' => "$module_path/xml/islandora_large_image_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_large_image_islandora_content_model_forms_form_associations() {
  return array(
    'islandora_large_image_mods_form' => array(
      'content_model' => 'islandora:sp_large_image_cmodel',
      'form_name' => 'Large image MODS form',
      'dsid' => 'MODS',
      'title_field' => "['titleInfo']['title']",
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_large_image_islandora_sp_large_image_cmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_large_image', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_ingest_post_ingest().
 */
function islandora_large_image_islandora_sp_large_image_cmodel_islandora_ingest_post_ingest($object) {
  module_load_include('inc', 'islandora_large_image', 'includes/islandora_large_image.process');
  islandora_large_image_create_all_derivatives($object);
}

/**
 * Implements validation callback for the file upload field in the ingest form.
 *
 * Prevent's the upload of non TIFF image files.  (Or non JP2K)
 */
function islandora_large_image_ingest_form_validate_file(array $element, array &$form_state, $form) {
  if ($_FILES['files']['error']['ingest-file-location'] != 0) {
    form_error($element, t('This field is required.'));
  }
  elseif (!in_array($_FILES['files']['type']['ingest-file-location'], array('image/tiff', 'image/tif', 'image/jp2'))) {
    form_error($element, t('This field only accepts tiff or jp2 formated image files.'));
  }
}

/**
 * Implements hook_preprocess().
 *
 * @param array $variables
 *   an array of variables that will be passed to the theme function
 */
function islandora_large_image_preprocess_islandora_large_image(&$variables) {
  drupal_add_js('misc/form.js');
  drupal_add_js('misc/collapse.js');
  $islandora_object = $variables['islandora_object'];
  $repository = $islandora_object->repository;
  module_load_include('inc', 'islandora', 'includes/islandora_dublin_core');
  module_load_include('inc', 'islandora', 'includes/datastream');
  // Get DC metadata
  try {
    $dc = $islandora_object['DC']->content;
    $dc_object = Dublin_Core::import_from_xml_string($dc);
  } catch (Exception $e) {
    drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error', FALSE);
  }
  $variables['islandora_dublin_core'] = isset($dc_object) ? $dc_object : NULL;
  $variables['dc_array'] = isset($dc_object) ? $dc_object->as_formatted_array() : array();
  $variables['islandora_object_label'] = $islandora_object->label;
  $variables['theme_hook_suggestions'][] = 'islandora_large_image__' . str_replace(':', '_', $islandora_object->id);
  $variables['parent_collections'] = islandora_datastream_get_parents($islandora_object);
  // Set title
  if (isset($islandora_object->label)) {
    drupal_set_title($islandora_object->label);
  }
  // Thumbnail
  if (isset($islandora_object['TN'])) {
    $params = array(
      'title' => $islandora_object->label,
      'path' => url("islandora/object/{$islandora_object->id}/datastream/TN/view")
    );
    $variables['islandora_thumbnail_img'] = theme('image', $params);
  }
  // Display large image
  module_load_include('inc', 'islandora', 'includes/solution_packs');
  $jp2_url = url("islandora/object/{$islandora_object->id}/datastream/JP2/view", array('absolute' => TRUE));
  $viewer = islandora_get_viewer($jp2_url, 'islandora_large_image_viewers');
  $variables['islandora_content'] = '';
  if ($viewer) {
    $variables['islandora_content'] = $viewer;
  }
  elseif (isset($islandora_object['JPG'])) { // If no viewer is configured just show the jpeg.
    $params = array(
      'title' => $islandora_object->label,
      'path' => url("islandora/object/{$islandora_object->id}/datastream/JPG/view")
    );
    $variables['islandora_content'] = theme('image', $params);
  }
  else {
    $variables['islandora_content'] = NULL;
  }
}
